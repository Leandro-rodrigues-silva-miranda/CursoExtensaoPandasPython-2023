# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lu4wjJbFJ_dTqGIS0DBwUKwFsdQQgjJK
"""

import pandas as pd
comb_df = pd.read_excel('ca-2021-02.xlsx')
display(comb_df.head(10))

comb_df['Ativo'] = True

display(comb_df.head())

comb_df['Obs:'] = ['Melhor Estado' if estado == 'MG' else 'Horrível' for estado in comb_df['Estado - Sigla']]
display(comb_df[['Estado - Sigla','Obs:']].loc[comb_df['Estado - Sigla'].isin(['MG','SP'])].tail(10))

from numpy import where
comb_df['Status preco'] = where(comb_df['Valor de Venda'] > 6.5, 'Caro', 'Barato')
display(comb_df.head())
print(f'{(comb_df["Status preco"] == "Caro").sum()} com status de "Caro"')
print(f'{(comb_df["Status preco"] == "Barato").sum()} com status de "Barato"')

#Calcular postos de gasolina por habitante
num_habitantes_df = pd.read_csv('ibge_num_habitantes_estimado.csv',sep=';')
num_habitantes_df.rename(columns={'Estado':'Estado - Sigla'}, inplace=True)
display(num_habitantes_df)

colunas = ['Municipio','Estado - Sigla']
merge_df = comb_df.merge(num_habitantes_df, how="inner", on=colunas)
display(merge_df)
print(merge_df.info())

#Destruir coluna vazia
merge_df.dropna(axis=1,inplace=True)
print(merge_df.info())

colunas = ['Regiao - Sigla','Nome da Rua', 'Numero Rua','Bairro','Cep','Produto','Data da Coleta','Valor de Venda','Unidade de Medida','Bandeira','Obs:','Status preco']
merge_df.drop(labels=colunas,axis=1,inplace=True)
print(merge_df.info())

#remover postos repetidos
merge_df.drop_duplicates(inplace=True)
display(merge_df)
print(merge_df.info())

#Agrupa e conta postos
postos_por_municipio_df = merge_df.groupby(by=['Estado - Sigla','Municipio','NumHabitantes2021']).count()
postos_por_municipio_df.reset_index(inplace=True)
postos_por_municipio_df.drop('CNPJ da Revenda',axis=1,inplace=True)
postos_por_municipio_df.rename(columns={'Revenda':'Numero de Postos'},inplace=True)
display(postos_por_municipio_df)
print(postos_por_municipio_df.info())
postos_por_municipio_df['Postos/Habitante'] = postos_por_municipio_df['NumHabitantes2021'] / postos_por_municipio_df['Numero de Postos']
display(postos_por_municipio_df)

postos_por_municipio_df.sort_values(by='Postos/Habitante',ascending=False,inplace=True)
display(postos_por_municipio_df)

#G R A F I C O S

import matplotlib.pyplot as plt

plt.hist(comb_df['Valor de Venda'])
#Título
plt.title('Valor médio combustíveis NOV/2021')
plt.xlabel('Valores')
plt.ylabel('Quantidade de coletas')
plt.axvline(comb_df['Valor de Venda'].mean(), color='red',linestyle='dashed')
plt.show()

#G R A F I C O  2
c_mean = comb_df['Valor de Venda'].groupby(by=comb_df['Produto']).mean()
display(c_mean)

#Define area grafico
import seaborn as sns

plt.figure(figsize=(10, 5))

c_mean_grafico = c_mean.plot(
    kind="barh",
    title= "Média Preço por Combustiveis",
    xlabel="Tipo de Combustivel",
    ylabel="Preço reais/litro",
    color="red",
    alpha = 0.9,
)

c_mean_grafico.set_ylabel("Tipo de Combustivel")
c_mean_grafico.set_xlabel("Preço reais/litro")

plt.grid(axis="x")

sns.despine(right=False, bottom=True)

plt.show()

excel = 'por_litro.xlsx'
c_mean.to_excel(excel,'Sumário')

#Vamor personalizar a planilha Excel...
from openpyxl import load_workbook
from openpyxl.styles import PatternFill, Font, Color, Alignment

#Abrir excel no openpyxl
wb = load_workbook(excel)

#Pegar a planilha certa usando sheetname
ws = wb['Sumário'] #work sheet 

#Pintar cabeçalho de cinza
cinzinha = PatternFill('solid',fgColor='AAAAAA')
coords = ['A1','B1']
for coord in coords:
  ws[coord].fill = cinzinha

#preço >= 6.5 pinta fonte vermelho e deixa negrito

MAX_ROW = ws.max_row
num_linha = 2
while num_linha <= MAX_ROW:
  coord = 'B'+str(num_linha)
  if ws[coord].value >= 6.5:
    ws[coord].font = Font(bold=True, color='FF0000')
  num_linha+=1





#Salva excel
wb.save(excel)